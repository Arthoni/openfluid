#
# Configuration file for CMakeLists.txt files
#
# Author : Jean-Christophe FABRE <fabrejc@supagro.inra.fr>
#
# This file is included by the main CMakeLists.txt file, and defines variables
# to configure the build and install 
#
 


################### install path ###################

SET(CMAKE_INSTALL_PREFIX "/usr")

SET(BIN_INSTALL_PATH "bin")
SET(LIB_INSTALL_PATH "lib")
SET(FUNCTIONS_INSTALL_PATH "lib/openfluid/functions")
SET(OFELIBDEV_INCLUDE_INSTALL_PATH "include/ofelib")
SET(PKGCONFIG_INSTALL_PATH "lib/pkgconfig")

SET(OFEFUNC2DOC_TPL_INSTALL_PATH "share/openfluid/engine/ofefunc2doc/template")

SET(DOC_INSTALL_PATH "share/doc/openfluid/engine")
SET(OFELIB_DOC_INSTALL_PATH "${DOC_INSTALL_PATH}/ofelib")
SET(OFELIBDEV_DOC_INSTALL_PATH "${DOC_INSTALL_PATH}/API")
SET(FUNCTIONS_DOC_INSTALL_PATH "${DOC_INSTALL_PATH}/functions")
SET(KERNEL_DOC_INSTALL_PATH ${DOC_INSTALL_PATH})
SET(MANUALS_DOC_INSTALL_PATH "${DOC_INSTALL_PATH}/manuals")
SET(DOCPDF_INSTALL_PATH "${MANUALS_DOC_INSTALL_PATH}/pdf")
SET(DOCHTML_INSTALL_PATH "${MANUALS_DOC_INSTALL_PATH}/html")


################### source and output path ###################

SET(BUILD_OUTPUT_PATH "${PROJECT_BINARY_DIR}/dist")

SET(LIBRARY_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${LIB_INSTALL_PATH}")
SET(FUNCTIONS_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${FUNCTIONS_INSTALL_PATH}")
SET(EXECUTABLE_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${BIN_INSTALL_PATH}")
SET(OFELIBDEV_INCLUDE_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${OFELIBDEV_INCLUDE_INSTALL_PATH}")
SET(PKGCONFIG_OUTPUT_PATH ${BUILD_OUTPUT_PATH}/${PKGCONFIG_INSTALL_PATH})

SET(DOXYGEN_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${OFELIBDEV_DOC_INSTALL_PATH}")
SET(FUNCTIONS_DOC_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${FUNCTIONS_DOC_INSTALL_PATH}")
SET(DOXYGEN_SOURCE_DIR "${CMAKE_SOURCE_DIR}/include")
SET(OFELIBDEV_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
SET(DOXYGEN_RESOURCES_DIR "${CMAKE_SOURCE_DIR}/resources/doxygen")

SET(DOXYGEN_DOCFORDEV_OUTPUT_PATH "${PROJECT_BINARY_DIR}/docfordev")
SET(DOXYGEN_DOCFORDEV_SOURCE_DIR "${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/src/kernel ${CMAKE_SOURCE_DIR}/ofelib")

SET(DOC_RESOURCES_DIR "${CMAKE_SOURCE_DIR}/resources/doc")
SET(DOC_BUILD_DIR "${PROJECT_BINARY_DIR}/docdir-for-build")
SET(DOCPDF_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${DOCPDF_INSTALL_PATH}")
SET(DOCHTML_OUTPUT_PATH "${BUILD_OUTPUT_PATH}/${DOCHTML_INSTALL_PATH}")


################### test datasets path ###################

SET(TESTS_DATASETS_PATH "${CMAKE_SOURCE_DIR}/tests/datasets")
SET(TESTS_OUTPUTDATA_PATH "/tmp")


################### versions ###################

SET(ENGINE_VERSION_MAJOR 1)
SET(ENGINE_VERSION_MINOR 4)
SET(ENGINE_VERSION_PATCH 1)
SET(ENGINE_VERSION_STATUS "beta1") # example: SET(ENGINE_VERSION_STATUS "rc1")

SET(ENGINE_FULL_VERSION "${ENGINE_VERSION_MAJOR}.${ENGINE_VERSION_MINOR}.${ENGINE_VERSION_PATCH}")

IF(ENGINE_VERSION_STATUS)
  SET(ENGINE_FULL_VERSION "${ENGINE_FULL_VERSION}~${ENGINE_VERSION_STATUS}")
ENDIF(ENGINE_VERSION_STATUS)


################### compilation and build ###################

SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall -Wfloat-equal")
SET(CMAKE_CXX_FLAGS_DEBUG "-g")

IF(NOT CMAKE_BUILD_TYPE) 
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF(NOT CMAKE_BUILD_TYPE)



################### functions build ###################

# uncomment this to build functions in foundry directory
SET(BUILD_FUNCTIONS_FOUNDRY 1)

# uncomment this to build functions mixing C++ and fortran source codes (in this source tree)
#SET(BUILD_FORTRAN_FUNCTIONS 1)


################### latex build ###################

# uncomment this to build latex docs
SET(BUILD_LATEX_DOCS 1)


################### docs for developers build ###################

SET(BUILD_DOCFORDEV 1)


################### packaging ###################


SET(PACKS_CMAKE_GENERATOR "Unix Makefiles")
SET(PACKS_ARCH "noarch")



IF (WIN32)
  SET(PACKS_GENERATOR "ZIP")

  SET(PACKS_ARCH "win32")
ENDIF (WIN32)



IF (UNIX)
  SET(PACKS_GENERATOR "TGZ;TBZ2;DEB;RPM")

  EXECUTE_PROCESS(COMMAND "dpkg" "--print-architecture" OUTPUT_VARIABLE CURRENT_ARCH OUTPUT_STRIP_TRAILING_WHITESPACE)
  SET(PACKS_ARCH ${CURRENT_ARCH})

ENDIF (UNIX)


IF (APPLE)
  SET(PACKS_GENERATOR "OSXX11;TGZ;PackageMaker")

  SET(PACKS_ARCH "OSX")
ENDIF (APPLE)


SET(PACKS_MAINTAINER "Jean-Christophe Fabre <fabrejc@supagro.inra.fr>")


SET(ENGINE_PACK_NAME "openfluid-engine")
SET(ENGINE_PACK_FILENAME "${ENGINE_PACK_NAME}_${ENGINE_FULL_VERSION}_${PACKS_ARCH}")
SET(ENGINE_DEB_DEPENDS "libwxbase2.8-dev (>= 2.8), libboost-dev (>= 1.35), libboost-filesystem-dev (>=1.35), libboost-date-time-dev (>=1.35)")
SET(ENGINE_PACK_DESC "This package is the OpenFLUID-Engine software. It contains the application kernel, headers and tools for functions development")

SET(ENGINEWODEV_PACK_NAME "openfluid-engine-wodev")
SET(ENGINEWODEV_PACK_FILENAME "${ENGINEWODEV_PACK_NAME}_${ENGINE_FULL_VERSION}_${PACKS_ARCH}")
SET(ENGINEWODEV_DEB_DEPENDS "libwxbase2.8-dev (>= 2.8), libboost (>= 1.35), libboost-filesystem (>=1.35), libboost-date-time (>=1.35)")
SET(ENGINEWODEV_PACK_DESC "This package is the OpenFLUID-Engine software. It contains the application kernel")




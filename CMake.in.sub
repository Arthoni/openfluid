#
# Macros and functions file for CMakeLists.txt files
#
# Author : Jean-Christophe FABRE <fabrejc@supagro.inra.fr>
#
# This file is included by the main CMakeLists.txt file, and defines macros
# and functions that are used in CMakeLists.txt files 
#




# Macro for compiling a simulation function
# FUNC_NAME : the name of the simulation function (without extension)
# FUNC_DIR : the sub-directory of the simulation function
# ARGN : install targets
MACRO(ADD_FUNCTION FUNC_NAME FUNC_SRCDIR FUNC_BINDIR)

  FILE(GLOB FUNC_CPP ${FUNC_SRCDIR}/*.cpp)
  ADD_LIBRARY(${FUNC_NAME} MODULE ${FUNC_CPP})
  SET_TARGET_PROPERTIES(${FUNC_NAME} PROPERTIES PREFIX "" SUFFIX "${FUNCTIONS_BINARY_EXTENSION}" LIBRARY_OUTPUT_DIRECTORY "${FUNC_BINDIR}")
  TARGET_LINK_LIBRARIES(${FUNC_NAME} ofelib)

  IF(MSYS)
    SET_TARGET_PROPERTIES(${FUNC_NAME} PROPERTIES LINK_FLAGS "-shared")
  ENDIF(MSYS)  

  
  # processing extra aguments as install components    
  FOREACH(cpnent ${ARGN})
    INSTALL(TARGETS ${FUNC_NAME}
            DESTINATION ${FUNCTIONS_INSTALL_PATH} COMPONENT ${cpnent})
  ENDFOREACH(cpnent ${ARGN})
  
     
ENDMACRO(ADD_FUNCTION)


# Macro for generating documentation from a simulation function source code
# FUNC_NAME : the name of the simulation function (without extension)
# FUNC_SRCDIR : the sub-directory of the simulation function
# FUNC_CPP : the .cpp file to scan to extract documentation
# ARGN : install targets
#MACRO(ADD_FUNCTION_DOC FUNC_NAME FUNC_SRCDIR FUNC_CPP)
#
#   ADD_CUSTOM_COMMAND(
#     OUTPUT "${FUNCTIONS_DOC_OUTPUT_PATH}/${FUNC_NAME}.pdf"
#     DEPENDS "${FUNC_SRCDIR}/${FUNC_CPP}"
#     COMMAND "${BIN_OUTPUT_PATH}/ofefunc2doc"
#     ARGS "${CMAKE_CURRENT_SOURCE_DIR}/${FUNC_DIR}/${FUNC_CPP}" "-t${CMAKE_SOURCE_DIR}/resources/ofefunc2doc/ofefunc2doc_tpl.tex" "-o${FUNCTIONS_DOC_OUTPUT_PATH}" "-p"     
#   )
#
#  ADD_CUSTOM_TARGET(${FUNC_NAME}-doc ALL DEPENDS "${FUNCTIONS_DOC_OUTPUT_PATH}/${FUNC_NAME}.pdf")
#
#  
#  # processing extra aguments as install components    
#  FOREACH(cpnent ${ARGN})
#    INSTALL(FILES "${FUNCTIONS_DOC_OUTPUT_PATH}/${FUNC_NAME}.pdf" 
#            DESTINATION ${FUNCTIONS_DOC_INSTALL_PATH} COMPONENT ${cpnent}
#            PERMISSIONS OWNER_WRITE OWNER_READ GROUP_READ WORLD_READ)            
#  ENDFOREACH(cpnent ${ARGN})
#
#  
#ENDMACRO(ADD_FUNCTION_DOC)


#MACRO(ADD_FUNCTION_WITH_DOC FUNC_NAME FUNC_SRCDIR FUNC_BINDIR FUNC_CPP)
#  ADD_FUNCTION(${FUNC_NAME} ${FUNC_SRCDIR} ${FUNC_BINDIR} ${ARGN})
#  IF(PYTHONINTERP_FOUND AND BUILD_LATEX_DOCS)  
#    ADD_FUNCTION_DOC(${FUNC_NAME} ${FUNC_SRCDIR} ${FUNC_CPP} ${ARGN})
#  ENDIF(PYTHONINTERP_FOUND AND BUILD_LATEX_DOCS)  
#ENDMACRO(ADD_FUNCTION_WITH_DOC FUNC_NAME FUNC_SRCDIR FUNC_BINDIR  FUNC_CPP)







#MACRO(COMPILE_PDFLATEX_DOC DOC_NAME DOC_OUTDIR)
#  ADD_CUSTOM_COMMAND(
#    OUTPUT  ${DOC_BUILD_DIR}/${DOC_NAME}.pdf
#    DEPENDS ${DOC_BUILD_DIR}/${DOC_NAME}.tex        
#    DEPENDS ${DOC_BUILD_DIR}    
#    COMMAND ${CMAKE_COMMAND} -E chdir ${DOC_BUILD_DIR} ${PDFLATEX_COMPILER}
#    ARGS "${DOC_BUILD_DIR}/${DOC_NAME}.tex"       
#    COMMAND ${CMAKE_COMMAND} -E chdir ${DOC_BUILD_DIR} ${PDFLATEX_COMPILER}
#    ARGS "${DOC_BUILD_DIR}/${DOC_NAME}.tex"    
#    )  


#  ADD_CUSTOM_COMMAND(    
#    OUTPUT  ${DOC_OUTDIR}/${DOC_NAME}.pdf
#    DEPENDS  ${DOC_BUILD_DIR}/${DOC_NAME}.pdf      
#    COMMAND ${CMAKE_COMMAND} -E copy ${DOC_BUILD_DIR}/${DOC_NAME}.pdf ${DOC_OUTDIR}/${DOC_NAME}.pdf        
#    )  


#  ADD_CUSTOM_TARGET(${DOC_NAME}-doc-pdf ALL
#    DEPENDS ${DOC_OUTDIR}/${DOC_NAME}.pdf
#   )
 
 
#  INSTALL(FILES ${DOC_OUTDIR}/${DOC_NAME}.pdf 
#          DESTINATION ${DOCPDF_INSTALL_PATH} COMPONENT engine)

#  INSTALL(FILES ${DOC_OUTDIR}/${DOC_NAME}.pdf 
 #         DESTINATION ${DOCPDF_INSTALL_PATH} COMPONENT engine-wodev)

 
#ENDMACRO(COMPILE_PDFLATEX_DOC DOC_NAME DOC_OUTDIR)

MACRO(COMPILE_PDFLATEX_DOC DOC_NAME DOC_BUILDDIR DOC_OUTDIR DOC_INSTALL_PATH)
  
  ADD_CUSTOM_COMMAND(
    OUTPUT  "${DOC_BUILDDIR}/${DOC_NAME}.pdf"
    DEPENDS "${DOC_BUILDDIR}"
    DEPENDS "${DOC_BUILDDIR}/${DOC_NAME}.tex"           
    COMMAND ${CMAKE_COMMAND} -E chdir ${DOC_BUILDDIR} ${PDFLATEX_COMPILER}
    ARGS "${DOC_BUILDDIR}/${DOC_NAME}.tex"       
    COMMAND ${CMAKE_COMMAND} -E chdir ${DOC_BUILDDIR} ${PDFLATEX_COMPILER}
    ARGS "${DOC_BUILDDIR}/${DOC_NAME}.tex"    
    )  


  ADD_CUSTOM_COMMAND(    
    OUTPUT  "${DOC_OUTDIR}/${DOC_NAME}.pdf"
    DEPENDS "${DOC_BUILDDIR}/${DOC_NAME}.pdf"      
    COMMAND ${CMAKE_COMMAND} -E copy ${DOC_BUILDDIR}/${DOC_NAME}.pdf ${DOC_OUTDIR}/${DOC_NAME}.pdf        
    )  


  ADD_CUSTOM_TARGET(${DOC_NAME}-doc-pdf ALL
    DEPENDS ${DOC_OUTDIR}/${DOC_NAME}.pdf
   )
 
 
  INSTALL(FILES ${DOC_OUTDIR}/${DOC_NAME}.pdf 
          DESTINATION ${DOC_INSTALL_PATH} COMPONENT engine)

  INSTALL(FILES ${DOC_OUTDIR}/${DOC_NAME}.pdf 
          DESTINATION ${DOC_INSTALL_PATH} COMPONENT engine-wodev)
 
ENDMACRO(COMPILE_PDFLATEX_DOC DOC_NAME DOC_BUILDDIR DOC_OUTDIR DOC_INSTALL_PATH)





MACRO(COMPILE_LATEX2HTML_DOC DOC_NAME DOC_BUILDDIR DOC_OUTDIR DOC_INSTALL_PATH)

  ADD_CUSTOM_COMMAND(
    OUTPUT  ${DOC_BUILDDIR}/html        
    DEPENDS ${DOC_BUILDDIR}    
    COMMAND ${CMAKE_COMMAND} -E make_directory ${DOC_BUILDDIR}/html       
   )  
    

  ADD_CUSTOM_COMMAND(
    OUTPUT  ${DOC_BUILDDIR}/html/${DOC_NAME}/index.html
    DEPENDS ${DOC_BUILDDIR}/${DOC_NAME}.tex        
    DEPENDS ${DOC_BUILDDIR}/html    
    COMMAND ${CMAKE_COMMAND} -E chdir ${DOC_BUILDDIR} ${LATEX2HTML_CONVERTER}
    ARGS -mkdir -split +1 -html_version 4.0,latin1,unicode -show_section_numbers -noinfo -local_icons -dir ${DOC_BUILDDIR}/html/${DOC_NAME} ${DOC_BUILDDIR}/${DOC_NAME}.tex       
    )  


  ADD_CUSTOM_COMMAND(    
    OUTPUT  ${DOC_OUTDIR}/${DOC_NAME}/
    DEPENDS  ${DOC_BUILDDIR}/html/${DOC_NAME}/index.html      
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${DOC_BUILDDIR}/html/${DOC_NAME}/ ${DOC_OUTDIR}/${DOC_NAME}        
    )  


  ADD_CUSTOM_TARGET(${DOC_NAME}-doc-html ALL
    DEPENDS ${DOC_OUTDIR}/${DOC_NAME}/
   )


# install commands are disabled 
# because latex2html generated files names are too long for deb packages!
#  
#  INSTALL(DIRECTORY ${DOC_OUTDIR}/${DOC_NAME}
#          DESTINATION ${DOCHTML_INSTALL_PATH} COMPONENT engine)
#
#  INSTALL(DIRECTORY ${DOC_OUTDIR}/${DOC_NAME} 
#          DESTINATION ${DOCHTML_INSTALL_PATH} COMPONENT engine-wodev)
 

 
ENDMACRO(COMPILE_LATEX2HTML_DOC DOC_NAME DOC_BUILDDIR DOC_OUTDIR DOC_INSTALL_PATH)


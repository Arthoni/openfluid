SET(CPACK_GENERATOR "NSIS")
SET(CPACK_SOURCE_GENERATOR "ZIP")
SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/resources/packaging;${CMAKE_MODULE_PATH}")        

SET(CPACK_PACKAGE_INSTALL_DIRECTORY "OpenFLUID-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
  
SET(CPACK_PACKAGE_NAME "OpenFLUID")
  
SET(CPACK_NSIS_DISPLAY_NAME "OpenFLUID")
SET(CPACK_NSIS_HELP_LINK "http://www.openfluid-project.org/")
SET(CPACK_NSIS_URL_INFO_ABOUT "http://www.openfluid-project.org/")
SET(CPACK_NSIS_CONTACT "OpenFLUID contact <contact@openfluid-project.org>")  
SET(CPACK_PACKAGE_ICON "${PROJECT_SOURCE_DIR}/resources/packaging\\\\OF_logo.bmp")  
SET(CPACK_NSIS_MENU_LINKS 
    "http://www.openfluid-project.org/" "OpenFLUID web site"
    "http://www.openfluid-project.org/community/" "OpenFLUID community site")
SET(CPACK_PACKAGE_EXECUTABLES "openfluid-builder" "OpenFLUID-Builder")   
   
SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${CPACK_PACKAGE_NAME} ${FULL_VERSION}")
SET(CPACK_NSIS_MODIFY_PATH ON)

# This packaging includes Boost libs and includes, Qt libs, GEOS libs and GDAL libs
# It requires the SUPPORT_DIR and QT5_PLUGINS_DIR environment variables

FIND_PATH(QT_MINGW_BINARY_DIR qt5core.dll)
  
FILE(TO_CMAKE_PATH "${Boost_LIBRARY_DIRS}" BOOST_LIBRARYDIR_MOD)
FILE(TO_CMAKE_PATH "${Boost_INCLUDE_DIR}" BOOST_INCLUDEDIR_MOD)  
FILE(TO_CMAKE_PATH "$ENV{SUPPORT_DIR}" SUPPORT_DIR_MOD)
FILE(TO_CMAKE_PATH "$ENV{SUPPORT_DIR}/bin" SUPPORT_BINDIR_MOD)
FILE(TO_CMAKE_PATH "$ENV{SUPPORT_DIR}/lib" SUPPORT_LIBDIR_MOD)
FILE(TO_CMAKE_PATH "$ENV{QT5_PLUGINS_DIR}" QT5_PLUGINS_DIR_MOD)  
FILE(TO_CMAKE_PATH "${QT_MINGW_BINARY_DIR}" QT_MINGW_BINARY_DIR_MOD)
 
# support libraries
IF(NOT SUPPORT_DIR_MOD)
  MESSAGE(FATAL_ERROR "environment variable SUPPORT_DIR is not set!")
ENDIF()
  
# QT5 plugins
IF(NOT QT5_PLUGINS_DIR_MOD)
  MESSAGE(FATAL_ERROR "environment variable QT5_PLUGINS_DIR is not set!")
ENDIF()
 
# MinGW from Qt
INSTALL(FILES "${QT_MINGW_BINARY_DIR_MOD}/libgcc_s_dw2-1.dll" DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES "${QT_MINGW_BINARY_DIR_MOD}/libstdc++-6.dll" DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES "${QT_MINGW_BINARY_DIR_MOD}/libwinpthread-1.dll" DESTINATION ${BIN_INSTALL_PATH})
 
# Boost
INSTALL(DIRECTORY "${BOOST_INCLUDEDIR_MOD}/boost" DESTINATION include)
INSTALL(DIRECTORY "${BOOST_LIBRARYDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "libboost_*.dll") 
INSTALL(DIRECTORY "${BOOST_LIBRARYDIR_MOD}/" DESTINATION ${LIB_INSTALL_PATH} FILES_MATCHING PATTERN "libboost_*.a")  
  
# GDAL  
INSTALL(DIRECTORY "${SUPPORT_BINDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "libgdal*.dll") 
INSTALL(DIRECTORY "${SUPPORT_LIBDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "libgdal*.dll") 
  
# GEOS
IF(OPENFLUID_ENABLE_LANDR)
  INSTALL(DIRECTORY "${SUPPORT_BINDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "libgeos*.dll") 
  INSTALL(DIRECTORY "${SUPPORT_LIBDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "libgeos*.dll") 
ENDIF()
  
# Qt
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5core.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5widgets.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5gui.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5svg.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5declarative.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5xml.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5concurrent.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/qt5network.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/icuin51.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/icuuc51.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES ${QT_MINGW_BINARY_DIR_MOD}/icudt51.dll DESTINATION ${BIN_INSTALL_PATH})
INSTALL(FILES "${QT5_PLUGINS_DIR_MOD}/platforms/qwindows.dll" DESTINATION ${BIN_INSTALL_PATH}/platforms/)

  
  
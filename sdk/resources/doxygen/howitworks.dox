/**

\page howitworks How it works?


\section genorg_ssec General organization
 
 The OpenFLUID-engine library features are gathered together into the openfluid namespace, which is splitted into three parts: 
<ul>
  <li>openfluid::core, defined in openfluid-core.h, gathers all the classes for the shared data between the kernel and the functions, and between the functions themselves
  <li>openfluid::base, defined in openfluid-base.h, gathers all the classes for the dynamic linking between the kernel and the functions, and in particular the openfluid::base::PluggableFunction class
  <li>openfluid::tools, defined in openfluid-tools.h, gathers tools available to process data, to build structures, to read files, ...
</ul>

\section feat_sec Features 
 
\subsection featplug_ssec Plug-in/kernel software architecture

The Openfluid-engine provides a plugin interface for creating functions that can be handled by the kernel.\n
This involves the following classes and structures: 
<ul>
  <li>openfluid::base::PluggableFunction 
  <li>openfluid::base::Signature
  <li>openfluid::base::SimulationStatus 
  <li>openfluid::base::SimulationInfo
</ul>
 
\subsection featstruct_ssec Spatio-temporal data structure 

In order to store and manage all the data handled to represent the spatial domain and the simulation information, the OpenFLUID-engine library defines a data structure for spatio-temporal data management.\n
This involves the following classes and structures: 
<ul>
  <li>openfluid::core::HydroObject
  <li>openfluid::core::SurfaceUnit  
  <li>openfluid::core::ReachSegment
  <li>openfluid::core::GroundwaterUnit
</ul>   


\subsection feattypes_ssec Simulation data types and structure

The simulation variables can be scalar data (a double precision floating value) or vector data (vector of double precision floating values). A date is associated to each value of simulation variables.  
This involves the following classes and structures:
<ul>
  <li>openfluid::core::DateTime
  <li>openfluid::core::ScalarValue
  <li>openfluid::core::VectorValue          
</ul>


\subsection feattypes_ssec Discrete events

Simulation functions can handle discrete events, associated to homogeneous units. 
This involves the following classes and structures:
<ul>
  <li>openfluid::core::DistributedEvent          
  <li>openfluid::core::EventCollection  
</ul>

  
\subsection feattools_ssec Tools  

This involves the following classes and structures: 
<ul>
  <li>openfluid::tools::ColumnTextParser
  <li>openfluid::tools::DateTimeSerie
  <li>openfluid::tools::DistributeInterpolate    
</ul>

FortranCPP.h



\n
\n 


*/
#!/bin/sh

############################

usage_info() {
  echo "MHYDAS configure script usage:\n"
  echo "  ./configure [OPTION]\n"
  echo " available options:"
  echo "      --release      builds a release version" 
  echo "      --devel        builds a development version"
  echo "      --nightly      builds a nightly-build version"
}


if [ "$1" != "--release" ] && [ "$1" != "--devel" ] && [ "$1" != "--nightly" ]; then
  usage_info
  exit 1
fi


SHELLCMD=/bin/bash


if [ -z "$OSTYPE" ]; then
  if [ -x $SHELLCMD ]; then
    OSTYPE=`$SHELLCMD -c 'echo \$OSTYPE'`
  fi
  if [ -z "$OSTYPE" ]; then
    echo "unable to determine \$OSTYPE value. aborting."
    exit 1
  fi
fi

if [ "$OSTYPE" != "linux-gnu" ] && [ "$OSTYPE" != "msys" ]; then
  echo "platform not supported. aborting"
  exit 1
fi


if [ -z "$MACHTYPE" ]; then
  if [ -x $SHELLCMD ]; then
    MACHTYPE=`$SHELLCMD -c 'echo \$MACHTYPE'`
  fi
  if [ -z "$MACHTYPE" ]; then
    echo "unable to determine \$MACHTYPE value. aborting."
    exit 1
  fi
fi


. ./configure.in.common
. ./configure.in.$OSTYPE


############################




OPTFILE=makeopts.inc

rm -f $OPTFILE
rm -f $SETUPH



BUILDVER=
case $1 in 
  "--nightly") BUILDVER="nightly";;   
  "--devel") BUILDVER="development";;
esac


SVNREV=x
if [ -x /usr/bin/svn ]; then
  SVNREV=`svn info -r HEAD | grep "vision :" | cut -d" " -f3 `  
fi



# ------------ option file for makefiles -------------

if [ "$OSTYPE" = "msys" ]; then
  DYNLIBEXT=dll
  STALIBEXT=a
  DYNLIBCCFLAGS=
else
  DYNLIBEXT=so
  STALIBEXT=a
  DYNLIBCCFLAGS=-fPIC
fi


CCCFLAGS=

if [ "$1" = "--release" ]; then 
  CCCFLAGS=$RELEASE_CCCFLAGS
fi

if [ "$1" = "--devel" ]; then
  CCCFLAGS=$DEVEL_CCCFLAGS
fi



echo "# Makefile options generated by configure script." > $OPTFILE
echo "" >> $OPTFILE
echo "" >> $OPTFILE

echo "# platform" >> $OPTFILE
echo "PLATFORM = $MACHTYPE"  >> $OPTFILE

echo "" >> $OPTFILE

echo "# C compilator" >> $OPTFILE
echo "CC = $CC" >> $OPTFILE

echo "" >> $OPTFILE

echo "# C/C++ compilator" >> $OPTFILE
echo "CPP = $CPP" >> $OPTFILE

echo "" >> $OPTFILE

echo "# Fortran77 compilator" >> $OPTFILE
echo "F77 = $F77" >> $OPTFILE

echo "" >> $OPTFILE


echo "# compile options for wxWidgets library" >> $OPTFILE
VARTOWRITE=`wx-config --libs base`
echo "WXLIBS = $VARTOWRITE" >> $OPTFILE
VARTOWRITE=`wx-config --cxxflags base`
echo "WXFLAGS = $VARTOWRITE" >> $OPTFILE

echo "" >> $OPTFILE

echo "# common compile options" >> $OPTFILE
echo "CCCLIBS =" >> $OPTFILE

echo "# common compile flags" >> $OPTFILE 
echo "CCCFLAGS = $CCCFLAGS" >> $OPTFILE

echo "# dynamic lib compile flags" >> $OPTFILE 
echo "DYNLIBCCFLAGS = $DYNLIBCCFLAGS" >> $OPTFILE

echo "# dynamic lib link flags" >> $OPTFILE 
echo "DYNLIBLDFLAGS = $DYNLIBLDFLAGS" >> $OPTFILE



echo "" >> $OPTFILE

echo "# sdk libs files names" >> $OPTFILE
echo "SDKLIBBASE = $SDKLIBSROOT-base" >> $OPTFILE
echo "SDKLIBCORE = $SDKLIBSROOT-core" >> $OPTFILE

echo "" >> $OPTFILE

echo "# dynamic library  extension" >> $OPTFILE 
echo "DYNLIBEXT = $DYNLIBEXT" >> $OPTFILE  

echo "" >> $OPTFILE

echo "# static library  extension" >> $OPTFILE 
echo "STALIBEXT = $STALIBEXT" >> $OPTFILE  

echo "" >> $OPTFILE

# détermination du chemin absolu de la racine du projet située ../..
ORIGPATH=`pwd`
ABSPATH=$ORIGPATH/..
cd $ABSPATH
ABSPATH=`pwd`
cd $ORIGPATH



echo "# build base dir" >> $OPTFILE
BASEBUILDDIR=$ABSPATH/build/$MACHTYPE
echo "BASEBUILDDIR = $BASEBUILDDIR" >> $OPTFILE

echo "# binary dir" >> $OPTFILE
echo "BASEBINDIR = $BASEBUILDDIR/bin" >> $OPTFILE

echo "# built objects dir" >> $OPTFILE
echo "BASEOBJDIR = $BASEBUILDDIR/obj" >> $OPTFILE

echo "# built libs dir" >> $OPTFILE
echo "BASELIBDIR = $BASEBUILDDIR/lib" >> $OPTFILE

echo "# built doc dir" >> $OPTFILE
echo "BASEDOCDIR = $ABSPATH/doc" >> $OPTFILE

echo "# packages dir" >> $OPTFILE
echo "BASEPACKDIR = $ABSPATH/packages/$MACHTYPE" >> $OPTFILE

echo "" >> $OPTFILE

echo "# build type" >> $OPTFILE
echo "BUILDVER = $BUILDVER" >> $OPTFILE

echo "# version" >> $OPTFILE
echo "MAJORVER = $MAJORVER" >> $OPTFILE
echo "MINORVER = $MINORVER" >> $OPTFILE

echo "# svn revision value" >> $OPTFILE
echo "SVNREV = $SVNREV" >> $OPTFILE

echo "" >> $OPTFILE

echo "# SDK installation infos" >> $OPTFILE

echo "SUDO = $SUDOBIN" >> $OPTFILE
echo "INSTSDKLIBSPATH = $INSTSDKLIBSPATH" >> $OPTFILE
echo "INSTSDKINCPATH = $INSTSDKINCPATH" >> $OPTFILE
echo "INSTSDKBINPATH = $INSTSDKBINPATH" >> $OPTFILE
echo "MHYDASDKCONFIGFILE = $MHYDASDKCONFIGFILE" >> $OPTFILE

echo "# Packages infos" >> $OPTFILE


echo "PACKMAINTAINER=$PACKMAINTAINER" >> $OPTFILE
echo "PACKDEPENDS=$PACKDEPENDS" >> $OPTFILE
echo "PACKSECTION=$PACKSECTION" >> $OPTFILE
echo "PACKPRIORITY=$PACKPRIORITY" >> $OPTFILE
echo "PACKARCH=$PACKARCH" >> $OPTFILE
echo "LIBPACKDESC=$LIBPACKDESC" >> $OPTFILE
echo "DEVPACKDESC=$DEVPACKDESC" >> $OPTFILE

echo "LIBPACKROOT = $LIBPACKROOT" >> $OPTFILE
echo "DEVPACKROOT = $DEVPACKROOT" >> $OPTFILE

LIBPACKNAME=$LIBPACKROOT\_$MAJORVER.$MINORVER-$SVNREV\_$PACKARCH
DEVPACKNAME=$DEVPACKROOT\_$MAJORVER.$MINORVER-$SVNREV\_$PACKARCH

echo "LIBPACKNAME = $LIBPACKNAME" >> $OPTFILE
echo "DEVPACKNAME = $DEVPACKNAME" >> $OPTFILE



echo "configuration file for compilation generated ($OPTFILE)"





exit 0

#!/bin/sh

############################

CC=gcc
CPP=g++
F77=

SETUPH=sdk/setup.h

EXEFILE=mhydas-mpp

PLUGSUBDIR=plugs

MDEF_INDIR=MHYDAS.IN
MDEF_OUTDIR=MHYDAS.OUT

MDEF_CONFFILE=config.xml
MDEF_INDATAFILE=inputdata.xml
MDEF_OUTRESFILE=outputres.xml

MDEF_SUDEFSFILE=SUdefs.dat
MDEF_RSDEFSFILE=RSdefs.dat
MDEF_GUDEFSFILE=GUdefs.dat

MDEF_RAINEVTFILE=rainevent.xml



############################
############################



# ------------ option file for makefiles -------------


OPTFILE=makeopts.inc



echo "# Makefile options generated by configure script." > $OPTFILE
echo "" >> $OPTFILE
echo "" >> $OPTFILE

echo "# platform" >> $OPTFILE
echo "PLATFORM = $MACHTYPE" >> $OPTFILE

echo "" >> $OPTFILE

echo "# C compilator" >> $OPTFILE
echo "CC = $CC" >> $OPTFILE

echo "" >> $OPTFILE

echo "# C/C++ compilator" >> $OPTFILE
echo "CPP = $CPP" >> $OPTFILE

echo "" >> $OPTFILE

echo "# Fortran77 compilator" >> $OPTFILE
echo "F77 = $F77" >> $OPTFILE

echo "" >> $OPTFILE

echo "# compile options for GEOS library" >> $OPTFILE
VARTOWRITE=`geos-config --libs`
echo "GEOSLIBS = $VARTOWRITE" >> $OPTFILE
VARTOWRITE=`geos-config --cflags`
echo "GEOSFLAGS = $VARTOWRITE" >> $OPTFILE

echo "" >> $OPTFILE

echo "# compile options for wxWidgets library" >> $OPTFILE
VARTOWRITE=`wx-config --libs base`
echo "WXLIBS = $VARTOWRITE" >> $OPTFILE
VARTOWRITE=`wx-config --cxxflags`
echo "WXFLAGS = $VARTOWRITE" >> $OPTFILE

echo "" >> $OPTFILE

echo "# common compile options" >> $OPTFILE
echo "CCCLIBS =" >> $OPTFILE

echo "# common compile flags" >> $OPTFILE 
echo "CCCFLAGS = -g -finput-charset=iso-8859-1" >> $OPTFILE

echo "" >> $OPTFILE

echo "# main executable file" >> $OPTFILE
if [ "$OSTYPE" = "msys" ]; then
  echo "EXEFILE = $EXEFILE.exe" >> $OPTFILE
else
  echo "EXEFILE = $EXEFILE" >> $OPTFILE
fi

echo "" >> $OPTFILE

if [ "$OSTYPE" = "msys" ]; then
  PLUGINEXT=dll
else
  PLUGINEXT=so
fi
echo "# plugins extension" >> $OPTFILE 
echo "PLUGINEXT = $PLUGINEXT" >> $OPTFILE  


echo "" >> $OPTFILE

if [ "$OSTYPE" = "msys" ]; then
  DYNLIBEXT=dll
else
  DYNLIBEXT=so
fi
echo "# dynamic library  extension" >> $OPTFILE 
echo "DYNLIBEXT = $DYNLIBEXT" >> $OPTFILE  


echo "" >> $OPTFILE

echo "# build base dir" >> $OPTFILE
echo "BASEBUILDDIR = `pwd`/../../build/$MACHTYPE" >> $OPTFILE

echo "# binary dir" >> $OPTFILE
echo "BASEBINDIR = \$(BASEBUILDDIR)/bin" >> $OPTFILE

echo "# built objects dir" >> $OPTFILE
echo "BASEOBJDIR = \$(BASEBUILDDIR)/obj" >> $OPTFILE

echo "# built libs dir" >> $OPTFILE
echo "BASELIBDIR = \$(BASEBUILDDIR)/lib" >> $OPTFILE

echo "# built doc dir" >> $OPTFILE
echo "BASEDOCDIR = `pwd`/../../doc" >> $OPTFILE


echo "" >> $OPTFILE


echo "# built plugins subdir" >> $OPTFILE 
echo "PLUGSUBDIR = $PLUGSUBDIR" >> $OPTFILE  


echo "configuration file for compilation generated ($OPTFILE)"




# ------------ setup header file for source code -------------
echo "/**" > $SETUPH
VARTOWRITE=`basename $SETUPH`
echo "  \file $VARTOWRITE" >> $SETUPH
echo "  automatically generated by configure script." >> $SETUPH
echo "*/" >> $SETUPH

echo "" >> $SETUPH

echo "#ifndef __SETUP_H__" >> $SETUPH
echo "#define __SETUP_H__" >> $SETUPH

echo "" >> $SETUPH

echo "#include <wx/string.h>" >> $SETUPH

echo "" >> $SETUPH

echo "// Default directories" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_INDIR = wxT(\"$MDEF_INDIR\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_OUTDIR = wxT(\"$MDEF_OUTDIR\");" >> $SETUPH

echo "" >> $SETUPH

echo "// Default files" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_CONFFILE = wxT(\"$MDEF_CONFFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_INDATAFILE = wxT(\"$MDEF_INDATAFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_OUTRESFILE = wxT(\"$MDEF_OUTRESFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_SUDEFSFILE = wxT(\"$MDEF_SUDEFSFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_RSDEFSFILE = wxT(\"$MDEF_RSDEFSFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_GUDEFSFILE = wxT(\"$MDEF_GUDEFSFILE\");" >> $SETUPH
echo "const wxString MHYDAS_DEFAULT_RAINEVTFILE = wxT(\"$MDEF_RAINEVTFILE\");" >> $SETUPH

echo "// File formats" >> $SETUPH
echo "const unsigned int MHYDAS_SUDEFSFILE_COLNBR = 8;" >> $SETUPH
echo "const unsigned int MHYDAS_RSDEFSFILE_COLNBR = 10;" >> $SETUPH
echo "const unsigned int MHYDAS_GUDEFSFILE_COLNBR = 4;" >> $SETUPH

echo "" >> $SETUPH

echo "// Plugins extension" >> $SETUPH
echo "const wxString MHYDAS_PLUGINS_EXT = wxT(\"$PLUGINEXT\");" >> $SETUPH

echo "" >> $SETUPH

echo "// Plugins subdir" >> $SETUPH
echo "const wxString MHYDAS_PLUGINS_SUBDIR = wxT(\"$PLUGSUBDIR\");" >> $SETUPH

echo "" >> $SETUPH

if [ -x /usr/bin/svnversion ]; then
  echo "#define SVN_REV" >> $SETUPH
  echo "const wxString SVN_REVISION = wxT(\"`svnversion -n ../src`\");" >> $SETUPH
  echo "" >> $SETUPH
fi

echo "#endif" >> $SETUPH

echo "" >> $SETUPH

echo "setup file for source code generated ($SETUPH)"


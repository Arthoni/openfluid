SET(CPACK_CMAKE_GENERATOR "${CMAKE_GENERATOR}")

CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/resources/packaging/readme.txt ${CMAKE_BINARY_DIR}/readme.txt COPYONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/COPYING ${CMAKE_BINARY_DIR}/copyright.txt COPYONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/resources/packaging/welcome.txt ${CMAKE_BINARY_DIR}/welcome.txt COPYONLY)


SET(CPACK_INSTALL_CMAKE_PROJECTS "${PROJECT_BINARY_DIR};${PROJECT_NAME};ALL;/") 

SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_BINARY_DIR}/copyright.txt")
SET(CPACK_RESOURCE_FILE_README "${CMAKE_BINARY_DIR}/readme.txt")
SET(CPACK_RESOURCE_FILE_WELCOME "${CMAKE_BINARY_DIR}/welcome.txt")  

SET(CPACK_PACKAGE_NAME "openfluid")
SET(CPACK_PACKAGE_VERSION "${FULL_VERSION}")
SET(CPACK_PACKAGE_VERSION_MAJOR "${VERSION_MAJOR}")
SET(CPACK_PACKAGE_VERSION_MINOR "${VERSION_MINOR}")
SET(CPACK_PACKAGE_VERSION_PATCH "${VERSION_PATCH}")
SET(CPACK_PACKAGE_CONTACT "Jean-Christophe Fabre <fabrejc@supagro.inra.fr>")
SET(CPACK_PACKAGE_VENDOR "LISAH (INRA-IRD-SupAgro)")
SET(CPACK_PACKAGE_DESCRIPTION "OpenFLUID.\n This package contains the OpenFLUID software environment for modelling fluxes in landscapes. It also includes libraries, headers and tools for development.")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${CPACK_PACKAGE_DESCRIPTION}")



IF(WIN32)
  SET(CPACK_GENERATOR "NSIS")
  SET(CMAKE_MODULE_PATH "share")
  SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/resources/packaging")  
  SET(CURRENT_ARCH win32)
  SET(CPACK_SOURCE_GENERATOR "ZIP")

  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "OpenFLUID-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
  
  SET(CPACK_NSIS_DISPLAY_NAME "OpenFLUID - Software Environment for Modelling Fluxes in Landscapes")
  SET(CPACK_NSIS_HELP_LINK "http://www.umr-lisah.fr/openfluid/")
  SET(CPACK_NSIS_URL_INFO_ABOUT "http://www.umr-lisah.fr/openfluid/")
  SET(CPACK_NSIS_CONTACT "Jean-Christophe Fabre <fabrejc@users.sourceforge.net>")  
  SET(CPACK_PACKAGE_ICON "${PROJECT_SOURCE_DIR}/resources/packaging\\\\OF_logo.bmp")  
  SET(CPACK_NSIS_MENU_LINKS "http://www.umr-lisah.fr/openfluid/" "OpenFLUID web site" "http://www.umr-lisah.fr/openfluid/community/" "OpenFLUID community site")
   
  SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${CPACK_PACKAGE_NAME} ${FULL_VERSION}")
  SET(CPACK_NSIS_MODIFY_PATH ON)

  SET(CPACK_NSIS_EXTRA_INSTALL_COMMANDS "
            CreateDirectory \\\"$%APPDATA%\\\\openfluid\\\\OPENFLUID.IN\\\"
            CreateDirectory \\\"$%APPDATA%\\\\openfluid\\\\OPENFLUID.OUT\\\"
            CreateDirectory \\\"$%APPDATA%\\\\openfluid\\\\functions\\\"
           ")

  FIND_PATH(MINGW_BINARY_DIR mingwm10.dll PATHS
  "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\MinGW;InstallLocation]/bin" 
  c:/MinGW/bin /MinGW/bin)
  
  FILE(TO_CMAKE_PATH "${Boost_INCLUDE_DIR}" BOOST_INCLUDEDIR_MOD)
  FILE(TO_CMAKE_PATH "${Boost_LIBRARY_DIRS}" BOOST_LIBRARYDIR_MOD)
  FILE(TO_CMAKE_PATH "${LibXML2_INCLUDE_DIRS}" LIBXML2_INCLUDEDIR_MOD)
  FILE(TO_CMAKE_PATH "$ENV{GTKMM_BASEPATH}" GTKMM_LIBRARYDIR_MOD)  
  FILE(TO_CMAKE_PATH "${MINGW_BINARY_DIR}" MINGW_BINARYDIR_MOD)
 
  INSTALL(DIRECTORY "${BOOST_INCLUDEDIR_MOD}/boost" DESTINATION include)
  INSTALL(DIRECTORY "${LIBXML2_INCLUDEDIR_MOD}/" DESTINATION include)
  INSTALL(DIRECTORY "${BOOST_LIBRARYDIR_MOD}/" DESTINATION ${BIN_INSTALL_PATH} FILES_MATCHING PATTERN "*.dll")
  INSTALL(DIRECTORY "${BOOST_LIBRARYDIR_MOD}/" DESTINATION ${LIB_INSTALL_PATH} FILES_MATCHING PATTERN "*.lib")  
  
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/bin\\\\pkg-config.exe" DESTINATION bin)
  
  INSTALL(FILES "${MINGW_BINARYDIR_MOD}/mingwm10.dll" DESTINATION ${BIN_INSTALL_PATH})
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/bin\\\\libxml2-2.dll" DESTINATION ${BIN_INSTALL_PATH})
#  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/bin\\\\iconv.dll" DESTINATION ${BIN_INSTALL_PATH})
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/bin\\\\zlib1.dll" DESTINATION ${BIN_INSTALL_PATH})
  
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/lib\\\\libxml2.dll.a" DESTINATION lib)
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/lib\\\\libxml2.lib" DESTINATION lib)
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/lib\\\\libz.a" DESTINATION lib)
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/lib\\\\zdll.lib" DESTINATION lib)
  INSTALL(FILES "${GTKMM_LIBRARYDIR_MOD}/lib\\\\zlib.def" DESTINATION lib)
  
  
ENDIF(WIN32)

IF(UNIX AND NOT APPLE)
  SET(CPACK_GENERATOR "TBZ2;TGZ;DEB")  
  EXECUTE_PROCESS(COMMAND "dpkg" "--print-architecture" OUTPUT_VARIABLE CURRENT_ARCH OUTPUT_STRIP_TRAILING_WHITESPACE)
  SET(CPACK_SOURCE_GENERATOR "TGZ")
  SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libboost${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-date-time${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-filesystem${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-math${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-program-options${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-regex${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-iostreams${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libboost-test${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}-dev, libxml2-dev, libcurl4-openssl-dev, libglibmm-2.4-dev, gcc, g++, cmake (>= 2.6.0)")
  SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${CURRENT_ARCH}")
  SET(CPACK_DEBIAN_PACKAGE_SECTION "science")
  SET(CPACK_DEBIAN_PACKAGE_PRIORITY "extra")  
ENDIF(UNIX AND NOT APPLE)

IF(APPLE)
  SET(CPACK_GENERATOR "OSXX11;TGZ;PackageMaker")
  SET(CURRENT_ARCH macosx)
  SET(CPACK_SOURCE_GENERATOR "TGZ")  
ENDIF(APPLE)

SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CURRENT_ARCH}")

SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_src")
SET(CPACK_SOURCE_IGNORE_FILES "${CMAKE_BINARY_DIR}/*;/\\\\.svn/;"/\\\\..+$"")


INCLUDE(CPack)